import mongoose from 'mongoose';
import { env } from './env.js';

// Connexion √† MongoDB avec Mongoose
export const connectDB = async (): Promise<void> => {
  try {
    // Configuration des options de connexion
    const options = {
      maxPoolSize: 10, // Maintenir jusqu'√† 10 connexions socket
      serverSelectionTimeoutMS: 5000, // Garder la tentative de connexion ouverte pendant 5 secondes
      socketTimeoutMS: 45000, // Fermer les sockets apr√®s 45 secondes d'inactivit√©
      bufferCommands: false, // D√©sactiver le buffering mongoose
    };

    console.log('üîÑ Tentative de connexion √† MongoDB...');

    await mongoose.connect(env.MONGODB_URI, options);

    console.log('‚úÖ Mongo connected');

    // Gestion des √©v√©nements de connexion
    mongoose.connection.on('error', (error) => {
      console.error('‚ùå Erreur de connexion MongoDB:', error);
    });

    mongoose.connection.on('disconnected', () => {
      console.warn('‚ö†Ô∏è MongoDB d√©connect√©');
    });

    mongoose.connection.on('reconnected', () => {
      console.log('üîÑ MongoDB reconnect√©');
    });

    // Gestion gracieuse de la fermeture
    process.on('SIGINT', async () => {
      console.log('üõë Fermeture de la connexion MongoDB...');
      await mongoose.connection.close();
      process.exit(0);
    });
  } catch (error) {
    console.error('‚ùå Erreur de connexion √† MongoDB:', error);
    process.exit(1);
  }
};
